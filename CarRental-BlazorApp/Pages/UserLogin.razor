@page "/login"

@using DataAccessLibrary
@using DataAccessLibrary.Models
@using CarRental_BlazorApp.Models
@using System.ComponentModel.DataAnnotations;

@inject Blazored.SessionStorage.ISessionStorageService session
@inject IClientData _db_Clients
@inject NavigationManager Navigation

<h3>Login</h3>

<div class="row">
    <div class="col-6">

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">
                @errorMessage
            </div>
        }

        <EditForm Model="@loginModel" OnValidSubmit="LoginUser">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="email">Email:</label>
                <InputText id="email" @bind-Value="loginModel.Username" class="form-control" />
                <ValidationMessage For="() => loginModel.Username" />
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <InputText id="password" @bind-Value="loginModel.Password" class="form-control" type="password" />
                <ValidationMessage For="() => loginModel.Password" />
            </div>
            <div class="form-group">
                <button id="submit" type="submit" class="btn btn-primary">Login</button>
            </div>
        </EditForm>
    </div>
</div>


@code {
    private DisplayLoginModel loginModel = new DisplayLoginModel();
    private string errorMessage;

    private async Task LoginUser()
    {

        if (await _db_Clients.CheckCredentials(loginModel.Username, loginModel.Password))
        {
            int userID = await _db_Clients.GetClientIdByEmail(loginModel.Username);
            await session.SetItemAsync("SessionUser", userID);
            Navigation.NavigateTo("/rent");
        }
        else
        {
            errorMessage = "Invalid username or password. Please try again.";
            loginModel.Password = string.Empty;
            loginModel.Username = string.Empty;
        }
    }
}
